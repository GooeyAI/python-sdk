# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .social_lookup_email_page_request_functions_item import SocialLookupEmailPageRequestFunctionsItem
import pydantic
from .social_lookup_email_page_request_selected_model import SocialLookupEmailPageRequestSelectedModel
from .social_lookup_email_page_request_response_format_type import SocialLookupEmailPageRequestResponseFormatType
from .run_settings import RunSettings
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class SocialLookupEmailPageRequest(UniversalBaseModel):
    functions: typing.Optional[typing.List[SocialLookupEmailPageRequestFunctionsItem]] = None
    variables: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = pydantic.Field(default=None)
    """
    Variables to be used as Jinja prompt templates and in functions as arguments
    """

    email_address: str
    input_prompt: typing.Optional[str] = None
    selected_model: typing.Optional[SocialLookupEmailPageRequestSelectedModel] = None
    avoid_repetition: typing.Optional[bool] = None
    num_outputs: typing.Optional[int] = None
    quality: typing.Optional[float] = None
    max_tokens: typing.Optional[int] = None
    sampling_temperature: typing.Optional[float] = None
    response_format_type: typing.Optional[SocialLookupEmailPageRequestResponseFormatType] = None
    settings: typing.Optional[RunSettings] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
