# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic

from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .run_settings import RunSettings
from .seo_summary_page_request_response_format_type import SeoSummaryPageRequestResponseFormatType
from .seo_summary_page_request_selected_model import SeoSummaryPageRequestSelectedModel
from .serp_search_location import SerpSearchLocation
from .serp_search_type import SerpSearchType


class SeoSummaryPageRequest(UniversalBaseModel):
    search_query: str
    keywords: str
    title: str
    company_url: str
    task_instructions: typing.Optional[str] = None
    enable_html: typing.Optional[bool] = None
    selected_model: typing.Optional[SeoSummaryPageRequestSelectedModel] = None
    max_search_urls: typing.Optional[int] = None
    enable_crosslinks: typing.Optional[bool] = None
    seed: typing.Optional[int] = None
    avoid_repetition: typing.Optional[bool] = None
    num_outputs: typing.Optional[int] = None
    quality: typing.Optional[float] = None
    max_tokens: typing.Optional[int] = None
    sampling_temperature: typing.Optional[float] = None
    response_format_type: typing.Optional[SeoSummaryPageRequestResponseFormatType] = None
    serp_search_location: typing.Optional[SerpSearchLocation] = None
    scaleserp_locations: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    DEPRECATED: use `serp_search_location` instead
    """

    serp_search_type: typing.Optional[SerpSearchType] = None
    scaleserp_search_field: typing.Optional[str] = pydantic.Field(default=None)
    """
    DEPRECATED: use `serp_search_type` instead
    """

    settings: typing.Optional[RunSettings] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
