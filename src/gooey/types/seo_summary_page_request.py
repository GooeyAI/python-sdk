# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from .run_settings import RunSettings
from .seo_summary_page_request_selected_model import SeoSummaryPageRequestSelectedModel
from .serp_search_location import SerpSearchLocation
from .serp_search_type import SerpSearchType


class SeoSummaryPageRequest(pydantic_v1.BaseModel):
    serp_search_location: typing.Optional[SerpSearchLocation] = None
    scaleserp_locations: typing.Optional[typing.List[str]] = pydantic_v1.Field(default=None)
    """
    DEPRECATED: use `serp_search_location` instead
    """

    serp_search_type: typing.Optional[SerpSearchType] = None
    scaleserp_search_field: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    DEPRECATED: use `serp_search_type` instead
    """

    search_query: str
    keywords: str
    title: str
    company_url: str
    task_instructions: typing.Optional[str] = None
    enable_html: typing.Optional[bool] = None
    selected_model: typing.Optional[SeoSummaryPageRequestSelectedModel] = None
    sampling_temperature: typing.Optional[float] = None
    max_tokens: typing.Optional[int] = None
    num_outputs: typing.Optional[int] = None
    quality: typing.Optional[float] = None
    avoid_repetition: typing.Optional[bool] = None
    max_search_urls: typing.Optional[int] = None
    enable_crosslinks: typing.Optional[bool] = None
    seed: typing.Optional[int] = None
    settings: typing.Optional[RunSettings] = None

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
