# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from .compare_upscaler_page_request_selected_models_item import CompareUpscalerPageRequestSelectedModelsItem
from .recipe_function import RecipeFunction
from .run_settings import RunSettings


class CompareUpscalerPageRequest(pydantic_v1.BaseModel):
    functions: typing.Optional[typing.List[RecipeFunction]] = None
    variables: typing.Optional[typing.Dict[str, typing.Any]] = pydantic_v1.Field(default=None)
    """
    Variables to be used as Jinja prompt templates and in functions as arguments
    """

    input_image: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    Input Image
    """

    input_video: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    Input Video
    """

    scale: int = pydantic_v1.Field()
    """
    The final upsampling scale of the image
    """

    selected_models: typing.Optional[typing.List[CompareUpscalerPageRequestSelectedModelsItem]] = None
    selected_bg_model: typing.Optional[typing.Literal["real_esrgan_x2"]] = None
    settings: typing.Optional[RunSettings] = None

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
