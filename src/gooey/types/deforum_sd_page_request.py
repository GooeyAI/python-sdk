# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic

from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .animation_prompt import AnimationPrompt
from .deforum_sd_page_request_selected_model import DeforumSdPageRequestSelectedModel
from .recipe_function import RecipeFunction
from .run_settings import RunSettings


class DeforumSdPageRequest(UniversalBaseModel):
    functions: typing.Optional[typing.List[RecipeFunction]] = None
    variables: typing.Optional[typing.Dict[str, typing.Any]] = pydantic.Field(default=None)
    """
    Variables to be used as Jinja prompt templates and in functions as arguments
    """

    animation_prompts: typing.List[AnimationPrompt]
    max_frames: typing.Optional[int] = None
    selected_model: typing.Optional[DeforumSdPageRequestSelectedModel] = None
    animation_mode: typing.Optional[str] = None
    zoom: typing.Optional[str] = None
    translation_x: typing.Optional[str] = None
    translation_y: typing.Optional[str] = None
    rotation3d_x: typing.Optional[str] = pydantic.Field(alias="rotation_3d_x", default=None)
    rotation3d_y: typing.Optional[str] = pydantic.Field(alias="rotation_3d_y", default=None)
    rotation3d_z: typing.Optional[str] = pydantic.Field(alias="rotation_3d_z", default=None)
    fps: typing.Optional[int] = None
    seed: typing.Optional[int] = None
    settings: typing.Optional[RunSettings] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
